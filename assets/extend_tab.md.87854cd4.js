import{_ as a,c as s,o as n,a as l}from"./app.43496e99.js";const d=JSON.parse('{"title":"拓展 Tab","description":"","frontmatter":{},"headers":[{"level":2,"title":"注册 Tab","slug":"注册-tab","link":"#注册-tab","children":[]},{"level":2,"title":"Tab 属性","slug":"tab-属性","link":"#tab-属性","children":[]},{"level":2,"title":"唤起 Tab","slug":"唤起-tab","link":"#唤起-tab","children":[]},{"level":2,"title":"注销 Tab","slug":"注销-tab","link":"#注销-tab","children":[]}],"relativePath":"extend/tab.md","lastUpdated":1660026515000}'),p={name:"extend/tab.md"},e=l(`<h1 id="拓展-tab" tabindex="-1">拓展 Tab <a class="header-anchor" href="#拓展-tab" aria-hidden="true">#</a></h1><p>在 Unreal Editor 的 UI 框架下，所有窗口都是以 Tab 或 Tab 组合的形式呈现的，每个 Tab 均可任意组合和停靠。这一设计使得 Unreal Editor 在自定义布局上有着极高的自由度。</p><p>在 Unreal Editor 中，单例对象 <code>FGlobalTabmanager</code> 管理着所有编辑器中的全局 Tab，可以通过该对象方便地添加自定义 Tab 。</p><h2 id="注册-tab" tabindex="-1">注册 Tab <a class="header-anchor" href="#注册-tab" aria-hidden="true">#</a></h2><p><code>FGlobalTabmanager</code> 的基类 <code>FTabManager</code> 拥有两个记录 Tab 信息的成员：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">FTabSpawner TabSpawner</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">TSharedRef</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">FTabSpawner</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> NomadTabSpawner</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>相应的，也拥有两个将 Tab 注册到 <code>FTabManager</code> 的方法：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">FGlobalTabmanager</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">RegisterTabSpawner</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  TabName</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">           // Name</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">FOnSpawnTab</span><span style="color:#89DDFF;">(),</span><span style="color:#676E95;font-style:italic;">     // Delegate: (const FSpawnTabArgs&amp;) -&gt; TSharedRef&lt;SDockTab&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">FCanSpawnTab</span><span style="color:#89DDFF;">()</span><span style="color:#676E95;font-style:italic;">     // Delegate: (const FSpawnTabArgs&amp;) -&gt; bool</span></span>
<span class="line"><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">FGlobalTabmanager</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">RegisterNomadTabSpawner</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  TabName</span><span style="color:#89DDFF;">,</span><span style="color:#676E95;font-style:italic;">           // Name</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">FOnSpawnTab</span><span style="color:#89DDFF;">(),</span><span style="color:#676E95;font-style:italic;">     // Delegate: (const FSpawnTabArgs&amp;) -&gt; TSharedRef&lt;SDockTab&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">FCanSpawnTab</span><span style="color:#89DDFF;">()</span><span style="color:#676E95;font-style:italic;">     // Delegate: (const FSpawnTabArgs&amp;) -&gt; bool</span></span>
<span class="line"><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>二者的注册行为基本相同，主要差异体现在：</p><ul><li><code>TabSpawner</code> 使用原生指针，重复注册 TabId 时会抛出异常并直接返回</li><li><code>NomadTabSpawner</code> 使用智能指针，重复注册 TabId 时会自动注销旧实例并创建新实例</li></ul><p>在大多数应用场景下，我们希望注册一个独立的 Tab ，并使用该 Tab 构建窗口。此时可优先考虑将自定义 Tab 注册到 <code>FGlobalTabmanager</code> 的 <code>NomadTabSpawner</code> 中。实际上，Unreal 官方提供的插件工程模板也是这样做的。</p><h2 id="tab-属性" tabindex="-1">Tab 属性 <a class="header-anchor" href="#tab-属性" aria-hidden="true">#</a></h2><p>在完成 Tab 的注册后，注册函数会返回一个 <code>FTabSpawnerEntry&amp;</code> ，可以使用 SetProperty 方法设置 Tab 的属性。例如：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">FTabSpawnerEntry</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> Entry </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">FGlobalTabmanager</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">RegisterNomadTabSpawner</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">Entry</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetDisplayName</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">LOCTEXT</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">TabTitle</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">WindowPlugin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#A6ACCD;">Entry</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">SetMenuType</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ETabSpawnerMenuType</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">Hidden</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>SetProperty 方法返回当前 <code>FTabSpawnerEntry&amp;</code> ，所以也可使用链式操作：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">FGlobalTabmanager</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">RegisterNomadTabSpawner</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    .</span><span style="color:#82AAFF;">SetDisplayName</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">LOCTEXT</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">TabTitle</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">WindowPlugin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">    .</span><span style="color:#82AAFF;">SetMenuType</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">ETabSpawnerMenuType</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">Hidden</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="唤起-tab" tabindex="-1">唤起 Tab <a class="header-anchor" href="#唤起-tab" aria-hidden="true">#</a></h2><p>可以使用如下方法来唤起一个已在 <code>FGlobalTabmanager</code> 中注册的全局 Tab ：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">FGlobalTabmanager</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">TryInvokeTab</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">FName</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">OutputLog</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"></span></code></pre></div><p>通过 <code>FTabManager::TryInvokeTab()</code> 方法唤起一个 Tab 的规则为：</p><ul><li>若 Tab 已实例化： <ul><li>Tab 所在 Window 处于打开状态时：聚焦 Window</li><li>Tab 所在 Window 处于关闭状态时：恢复 Window</li></ul></li><li>若 Tab 未实例化： <ul><li>有已实例化的同类 Tab 时：在同类 Tab 所在 Window 中打开</li><li>无已实例化的同类 Tab 时：新建 Window 并打开</li></ul></li></ul><h2 id="注销-tab" tabindex="-1">注销 Tab <a class="header-anchor" href="#注销-tab" aria-hidden="true">#</a></h2><p>注销 Tab 时，使用与注册相应的 API 即可：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">FGlobalTabmanager</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">UnregisterTabSpawner</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">TabName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">FGlobalTabmanager</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">UnregisterNomadTabSpawner</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">TabName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div>`,24),o=[e];function t(c,r,F,i,D,y){return n(),s("div",null,o)}const A=a(p,[["render",t]]);export{d as __pageData,A as default};
