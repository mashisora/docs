import{_ as s,c as a,o as e,a as n}from"./app.43496e99.js";const _=JSON.parse('{"title":"资产类型 Object","description":"","frontmatter":{},"headers":[{"level":2,"title":"资产对象","slug":"资产对象","link":"#资产对象","children":[]},{"level":2,"title":"创建资产类型容器","slug":"创建资产类型容器","link":"#创建资产类型容器","children":[]}],"relativePath":"asset/object.md","lastUpdated":1660026515000}'),l={name:"asset/object.md"},o=n(`<h1 id="资产类型-object" tabindex="-1">资产类型 Object <a class="header-anchor" href="#资产类型-object" aria-hidden="true">#</a></h1><h2 id="资产对象" tabindex="-1">资产对象 <a class="header-anchor" href="#资产对象" aria-hidden="true">#</a></h2><p>在 Unreal Engine 中，资产对象是派生自 <code>UObject</code> 的类的实例。一个资产对象的数据存储在一个 <code>UObject</code> 实例上。相较于其他 Unreal 对象，资产对象只是通过相关接口实现了编辑器和资产管理等功能，并无本质上的区别。</p><h2 id="创建资产类型容器" tabindex="-1">创建资产类型容器 <a class="header-anchor" href="#创建资产类型容器" aria-hidden="true">#</a></h2><p>要创建资产类型，首先需要声明一个派生自 <code>UObject</code> 的类作为该资产对象的容器，并在其中定义该资产类型的成员属性。</p><p>声明用作资产类型容器的 <code>UObject</code> 类与声明普通 <code>UObject</code> 类无任何区别：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">UCLASS</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">UCustomAsset</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">UObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">GENERATED_BODY</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">UPROPERTY</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">EditAnywhere</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> BlueprintReadWrite</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> TestBool</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><p>与其他 Unreal C++ Class 相同，对希望在 Unreal Editor 的资产编辑器中显示的成员属性使用 <code>UPROPERTY()</code> 宏声明可见性和其他编辑器相关属性。</p>`,8),p=[o];function t(c,r,i,d,F,y){return e(),a("div",null,p)}const D=s(l,[["render",t]]);export{_ as __pageData,D as default};
