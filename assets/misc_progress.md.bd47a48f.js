import{_ as s,c as a,o as n,a as o}from"./app.43496e99.js";const A=JSON.parse('{"title":"进度条窗口","description":"","frontmatter":{},"headers":[],"relativePath":"misc/progress.md","lastUpdated":1660026515000}'),l={name:"misc/progress.md"},p=o(`<h1 id="进度条窗口" tabindex="-1">进度条窗口 <a class="header-anchor" href="#进度条窗口" aria-hidden="true">#</a></h1><p><code>FScopedSlowTask</code> 类封装了任务进度条窗口，可以方便地使用它在执行复杂多任务时给用户提供实时的视觉反馈。</p><ul><li><code>FScopedSlowTask(Amount, Message)</code>：构造函数，指定总任务数量和窗口文字信息</li><li><code>MakeDialog(bShowCancelButton)</code>：成员函数，创建进度条窗口，指定该任务是否可取消</li><li><code>ShouldCancel()</code>：成员函数，返回进度条窗口的取消按钮是否被按下</li><li><code>EnterProgressFrame(n)</code>：任务进度前进 n 个，不传入参数时默认前进 1 个</li></ul><p>下面给出一个执行循环任务时，创建并维护进度条窗口的例子：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">FScopedSlowTask</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Task</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Objects</span><span style="color:#A6ACCD;">.</span><span style="color:#82AAFF;">Num</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">FText</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">FromString</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">TEXT</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Task</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)));</span></span>
<span class="line"><span style="color:#A6ACCD;">Task</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">MakeDialog</span><span style="color:#89DDFF;">(true);</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> Object </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> Objects</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Task</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ShouldCancel</span><span style="color:#89DDFF;">())</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">break</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // ...Do Something.</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">Task</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">EnterProgressFrame</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div>`,5),e=[p];function t(c,r,F,D,y,i){return n(),a("div",null,e)}const C=s(l,[["render",t]]);export{A as __pageData,C as default};
