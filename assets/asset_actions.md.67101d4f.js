import{_ as s,c as n,o as a,a as o}from"./app.43496e99.js";const d=JSON.parse('{"title":"资产类型 Actions","description":"","frontmatter":{},"headers":[{"level":2,"title":"关于 Actions","slug":"关于-actions","link":"#关于-actions","children":[]},{"level":2,"title":"声明 Actions","slug":"声明-actions","link":"#声明-actions","children":[]},{"level":2,"title":"注册 Actions","slug":"注册-actions","link":"#注册-actions","children":[]},{"level":2,"title":"注销 Actions","slug":"注销-actions","link":"#注销-actions","children":[]}],"relativePath":"asset/actions.md","lastUpdated":1660026515000}'),l={name:"asset/actions.md"},p=o(`<h1 id="资产类型-actions" tabindex="-1">资产类型 Actions <a class="header-anchor" href="#资产类型-actions" aria-hidden="true">#</a></h1><h2 id="关于-actions" tabindex="-1">关于 Actions <a class="header-anchor" href="#关于-actions" aria-hidden="true">#</a></h2><p>在 Unreal Editor 的内容浏览器中，每种资产类型都拥有一套由 <code>IAssetTypeActions</code> 派生类定义的 “行为” 。这套 “行为” 描述了该资产类型的显示名称、类别、标签颜色、右键菜单拓展等属性，同时定义了该资产类型适用何种资产编辑器。</p><p>本章节中，将用于定义特定资产类型 “行为” 的 <code>IAssetTypeActions</code> 派生类称作 Actions 。</p><h2 id="声明-actions" tabindex="-1">声明 Actions <a class="header-anchor" href="#声明-actions" aria-hidden="true">#</a></h2><p>要使自定义资产类型被 Unreal Editor 的内容浏览器正确处理，需要为其声明一个 Actions 。</p><p>Unreal 已经定义了一些被内置资产类型使用的 Actions ，我们可以直接继承它们以简化代码。本文选择继承 <code>FAssetTypeActions_Base</code> ，这是很多 Unreal 内置资产类型 Actions 的基类，该类为 <code>IAssetTypeActions</code> 接口中定义的大多数虚函数提供了默认实现或空实现。</p><p>一般来说，至少还需实现以下四个方法以声明一个有效 Actions ：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">FCustomAssetTypeActions</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">FAssetTypeActions_Base</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">FText</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">GetName</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">override</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">FText</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">FromString</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">TEXT</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Custom Asset</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">UClass</span><span style="color:#C792EA;">*</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">GetSupportedClass</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">override</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">UCustomAsset</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">StaticClass</span><span style="color:#89DDFF;">();</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">FColor</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">GetTypeColor</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">override</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">FColor</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">Black</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">uint32</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">GetCategories</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">override</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">EAssetTypeCategories</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">Misc</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h2 id="注册-actions" tabindex="-1">注册 Actions <a class="header-anchor" href="#注册-actions" aria-hidden="true">#</a></h2><p>在 Unreal Editor 中，所有资产类型的 Actions 由内置模块 AssetTools 的全局单例负责维护。可以通过 <code>FAssetToolsModule::Get()</code> 方法得到该实例，向其注册自定义资产类型的 Actions。</p><p>下面代码演示了在 Unreal 模块的 <code>StartupModule()</code> 钩子中注册 Actions ：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">FCustomAssetModule</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">StartupModule</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">auto</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> AssetToolsModule </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">FModuleManager</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">LoadModuleChecked</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">FAssetToolsModule</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">AssetTools</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">auto</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> AssetTools </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> AssetToolsModule</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">  AssetTypeActionsList</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Add</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">MakeShared</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">FCustomAssetTypeActions</span><span style="color:#89DDFF;">&gt;());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> Actions </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> AssetTypeActionsList</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">AssetTools</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">RegisterAssetTypeActions</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">Actions</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>在实际插件开发过程中，一个模块可能会包含多个自定义资产类型。为便于管理这些资产类型 Actions 的注册状态，可以声明一个 <code>AssetTypeActionsList</code> 用于记录已注册 Actions 的指针。同时也便于注销 Actions 时获取已注册实例。</p><h2 id="注销-actions" tabindex="-1">注销 Actions <a class="header-anchor" href="#注销-actions" aria-hidden="true">#</a></h2><p>下面代码演示了在 Unreal 模块的 <code>ShutdownModule()</code> 钩子中注销 Actions ：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">FCustomAssetModule</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">ShutdownModule</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">auto</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> AssetToolsModule </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">FModuleManager</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">GetModulePtr</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">FAssetToolsModule</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">AssetTools</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">AssetToolsModule </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nullptr)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">auto</span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;"> AssetTools </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">AssetToolsModule</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">auto</span><span style="color:#F07178;"> Actions </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> AssetTypeActionsList</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">AssetTools</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UnregisterAssetTypeActions</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">Actions</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>需要注意的是，在 Unreal Editor 退出时，自定义模块的卸载往往迟于内置模块，导致该函数调用时找不到 AssetTools 模块。注销 Actions 前须判断 <code>AssetToolsModule</code> 是否存在，否则可能会在 Unreal Editor 退出时引起崩溃。</p>`,18),e=[p];function t(c,r,F,y,D,i){return a(),n("div",null,e)}const C=s(l,[["render",t]]);export{d as __pageData,C as default};
