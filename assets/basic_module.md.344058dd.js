import{_ as s,c as a,o as n,a as l}from"./app.43496e99.js";const D=JSON.parse('{"title":"Unreal Module","description":"","frontmatter":{},"headers":[{"level":2,"title":"模块接口 | Module Interface","slug":"模块接口-module-interface","link":"#模块接口-module-interface","children":[]},{"level":2,"title":"WIP","slug":"wip","link":"#wip","children":[]}],"relativePath":"basic/module.md","lastUpdated":1660026515000}'),e={name:"basic/module.md"},o=l(`<h1 id="unreal-module" tabindex="-1">Unreal Module <a class="header-anchor" href="#unreal-module" aria-hidden="true">#</a></h1><p><code>IMPLEMENT_MODULE(ModuleClass, ModuleName)</code> 声明 Unreal Module</p><h2 id="模块接口-module-interface" tabindex="-1">模块接口 | Module Interface <a class="header-anchor" href="#模块接口-module-interface" aria-hidden="true">#</a></h2><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">IModuleInterface</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">~IModuleInterface</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // Called after the module has been loaded and the module object has been created</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">StartupModule</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // Called before the module has been unloaded</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">PreUnloadCallback</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // Called after the module has been reloaded</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">PostLoadCallback</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // Called before the module is unloaded, right before the module object is destroyed.</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">ShutdownModule</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // Whether the module supports shutdown separate from the rest of the engine.</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">SupportsDynamicReloading</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">true;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // Whether the module supports shutdown on application exit</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">SupportsAutomaticShutdown</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">true;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // True for &quot;gameplay modules&quot;, or false for engine code modules, plugins, etc.</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">IsGameModule</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">false;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><h2 id="wip" tabindex="-1">WIP <a class="header-anchor" href="#wip" aria-hidden="true">#</a></h2>`,5),p=[o];function t(c,r,y,i,F,d){return n(),a("div",null,p)}const h=s(e,[["render",t]]);export{D as __pageData,h as default};
