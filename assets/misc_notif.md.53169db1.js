import{_ as a,c as o,o as s,a as n}from"./app.43496e99.js";const D=JSON.parse('{"title":"消息通知","description":"","frontmatter":{},"headers":[],"relativePath":"misc/notif.md","lastUpdated":1660026515000}'),t={name:"misc/notif.md"},e=n(`<h1 id="消息通知" tabindex="-1">消息通知 <a class="header-anchor" href="#消息通知" aria-hidden="true">#</a></h1><p><code>FSlateNotificationManager</code> 管理着 Unreal Editor 中的大多数通知弹窗，可以通过向其全局实例添加通知的方式便捷的实现通知推送。</p><ul><li><p><code>FNotificationInfo</code>：记录一个通知信息的结构体</p></li><li><p><code>AddNotification(Info)</code>：通过 <code>FSlateNotificationManager</code> 推送通知，需传入一个 <code>FNotificationInfo</code> 作为信息</p></li></ul><p>下面给出一个通过全局 <code>FSlateNotificationManager</code> 实例在 Unreal Editor 中推送通知的例子：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">FNotificationInfo</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Info</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">FText</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">FromString</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Test Notification...</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#FFCB6B;">FSlateNotificationManager</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">().</span><span style="color:#82AAFF;">AddNotification</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Info</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div>`,5),c=[e];function l(p,i,r,d,F,f){return s(),o("div",null,c)}const y=a(t,[["render",l]]);export{D as __pageData,y as default};
