import{_ as s,c as a,o as n,a as l}from"./app.43496e99.js";const d=JSON.parse('{"title":"Start Auto","description":"","frontmatter":{},"headers":[{"level":2,"title":"Asset Action Utility","slug":"asset-action-utility","link":"#asset-action-utility","children":[]},{"level":2,"title":"Editor Utility Library 函数库","slug":"editor-utility-library-函数库","link":"#editor-utility-library-函数库","children":[]},{"level":2,"title":"关于资产对象的名称和路径","slug":"关于资产对象的名称和路径","link":"#关于资产对象的名称和路径","children":[{"level":3,"title":"获取当前选中 Assets","slug":"获取当前选中-assets","link":"#获取当前选中-assets","children":[]},{"level":3,"title":"资产对象的名称和路径","slug":"资产对象的名称和路径","link":"#资产对象的名称和路径","children":[]}]},{"level":2,"title":"获取当前选中 Actors","slug":"获取当前选中-actors","link":"#获取当前选中-actors","children":[]},{"level":2,"title":"资产导入","slug":"资产导入","link":"#资产导入","children":[]}],"relativePath":"auto/writing.md","lastUpdated":1660026515000}'),e={name:"auto/writing.md"},t=l(`<h1 id="start-auto" tabindex="-1">Start Auto <a class="header-anchor" href="#start-auto" aria-hidden="true">#</a></h1><p>这一部分主要围绕 Unreal Editor 中的自动化操作展开</p><h2 id="asset-action-utility" tabindex="-1">Asset Action Utility <a class="header-anchor" href="#asset-action-utility" aria-hidden="true">#</a></h2><p><code>UAssetActionUtility</code> 是 Unreal Editor 中 <code>Blutility</code> 模块的一个工具类。</p><p>在该类的所有派生类中，只要将成员函数通过 <code>UFUNCTION(CallInEditor)</code> 暴露给编辑器，该函数入口将会自动添加到资产右键菜单的 Scripted Asset Actions 子菜单中。并且对于需要传入参数的函数，编辑器会以对话框的形式向用户收集参数。</p><blockquote><p>此菜单注册操作由 <code>FBlutilityMenuExtensions::CreateBlutilityActionsMenu()</code> 实现。在 <code>FBlutilityContentBrowserExtensions</code> 类中完成注册。</p></blockquote><h2 id="editor-utility-library-函数库" tabindex="-1">Editor Utility Library 函数库 <a class="header-anchor" href="#editor-utility-library-函数库" aria-hidden="true">#</a></h2><p><code>UEditorUtilityLibrary</code> 是 Unreal Editor 中 <code>Blutility</code> 模块的一个工具函数库。该函数库提供了如下工具函数，可以方便地获取一些编辑器当前状态。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">GetSelectionSet</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#82AAFF;">GetSelectionBounds</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">FVector</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> Origin</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> FVector</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> BoxExtent</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">float</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> SphereRadius</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">GetSelectedAssets</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#82AAFF;">GetSelectedBlueprintClasses</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#82AAFF;">GetSelectedAssetData</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#82AAFF;">RenameAsset</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">UObject</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> Asset</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> FString</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> NewName</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">GetActorReference</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">FString PathToActor</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#82AAFF;">GetCurrentContentBrowserPath</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">FString</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> OutPath</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="关于资产对象的名称和路径" tabindex="-1">关于资产对象的名称和路径 <a class="header-anchor" href="#关于资产对象的名称和路径" aria-hidden="true">#</a></h2><h3 id="获取当前选中-assets" tabindex="-1">获取当前选中 Assets <a class="header-anchor" href="#获取当前选中-assets" aria-hidden="true">#</a></h3><p><code>UEditorUtilityLibrary</code> 提供了两种获取编辑器中当前选中资产对象的 API ，分别为：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">UEditorUtilityLibrary</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">GetSelectedAssets</span><span style="color:#89DDFF;">();</span><span style="color:#676E95;font-style:italic;">     // () -&gt; TArray&lt;UObject*&gt;</span></span>
<span class="line"><span style="color:#FFCB6B;">UEditorUtilityLibrary</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">GetSelectedAssetData</span><span style="color:#89DDFF;">();</span><span style="color:#676E95;font-style:italic;">  // () -&gt; TArray&lt;FAssetData&gt;</span></span>
<span class="line"></span></code></pre></div><p>两者均通过 <code>FContentBrowserModule</code> 获取当前选中资产的 <code>FAssetData</code> ，区别在于：</p><ul><li><code>GetSelectedAssetData()</code> 在得到 <code>FAssetData</code> 后直接返回。</li><li><code>GetSelectedAssets()</code> 使用 <code>FAssetData</code> 查找相应的 <code>UObject</code> 并返回。</li></ul><h3 id="资产对象的名称和路径" tabindex="-1">资产对象的名称和路径 <a class="header-anchor" href="#资产对象的名称和路径" aria-hidden="true">#</a></h3><p><code>FAssetData</code> 是一个记录已加载资产信息的结构体，拥有以下名称和路径属性：</p><ul><li><code>ObjectPath</code> : 完整对象路径，形如 <code>/Game/Path/Package.ObjectName</code></li><li><code>PackageName</code> : 包名（含路径），形如 <code>/Game/Path/Package</code></li><li><code>PackagePath</code> : 包路径（不含包名），形如 <code>/Game/Path</code></li><li><code>AssetName</code> : 资产名，对于资产对象，一般与对象名一致</li><li><code>AssetClass</code> : 资产类名，Unreal Editor 中的资产类型名</li></ul><p>上述属性均为 <code>FName</code> 类型，可以使用 <code>ToString()</code> 方法获取相应的字符串。</p><p>此外，也可通过 <code>UObject</code> 提供的通用 API 获取资产对象的名称和路径属性，下面给出一组方法：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> ObjectPath </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Object</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">GetPathName</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> PackageName </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Object</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">GetPackage</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">GetName</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">int32 index</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">ObjectPath</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">FindLastChar</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> index</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> PackagePath </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ObjectPath</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Left</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">index</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> AssetName </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Object</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">GetName</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> AssetClass </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Object</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">GetClass</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">GetName</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span></code></pre></div><h2 id="获取当前选中-actors" tabindex="-1">获取当前选中 Actors <a class="header-anchor" href="#获取当前选中-actors" aria-hidden="true">#</a></h2><p>Editor Scripting Utilities 插件已在 Unreal 5.0 中标记为 Deprecated。不建议使用该插件中 <code>UEditorLevelLibrary</code> 提供的 API，建议使用 Subsystem API。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> SelectedActors </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> GEditor</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">GetEditorSubsystem</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">UEditorActorSubsystem</span><span style="color:#89DDFF;">&gt;()</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">GetSelectedLevelActors</span><span style="color:#89DDFF;">();</span></span>
<span class="line"></span></code></pre></div><p>或直接使用 <code>GEditor</code> 实现：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">TArray</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">UObject</span><span style="color:#89DDFF;">*&gt;</span><span style="color:#A6ACCD;"> Objects</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">GEditor</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">GetSelectedActors</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">GetSelectedObjects</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Objects</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="资产导入" tabindex="-1">资产导入 <a class="header-anchor" href="#资产导入" aria-hidden="true">#</a></h2><p>在 Unreal Editor 中，资产的导入由 Import Subsystem 完成。我们可以使用该系统触发导入操作。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">GEditor</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">GetEditorSubsystem</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">UImportSubsystem</span><span style="color:#89DDFF;">&gt;()-&gt;</span><span style="color:#82AAFF;">ImportNextTick</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Files</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> Path</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><p>Import Subsystem 同时开放了一组可以干预资产导入过程的代理：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">DECLARE_MULTICAST_DELEGATE_FiveParams</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">FOnAssetPreImport</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">        UFactory</span><span style="color:#89DDFF;">*,</span><span style="color:#A6ACCD;">UClass</span><span style="color:#89DDFF;">*,</span><span style="color:#A6ACCD;"> UObject</span><span style="color:#89DDFF;">*,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> FName</span><span style="color:#89DDFF;">&amp;,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> TCHAR</span><span style="color:#89DDFF;">*);</span></span>
<span class="line"><span style="color:#82AAFF;">DECLARE_MULTICAST_DELEGATE_TwoParams</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">FOnAssetPostImport</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> UFactory</span><span style="color:#89DDFF;">*,</span><span style="color:#A6ACCD;"> UObject</span><span style="color:#89DDFF;">*);</span></span>
<span class="line"><span style="color:#82AAFF;">DECLARE_MULTICAST_DELEGATE_OneParam</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">FOnAssetReimport</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> UObject</span><span style="color:#89DDFF;">*);</span></span>
<span class="line"><span style="color:#82AAFF;">DECLARE_MULTICAST_DELEGATE_TwoParams</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">FOnAssetPostLODImport</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> UObject</span><span style="color:#89DDFF;">*,</span><span style="color:#A6ACCD;"> int32</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">FOnAssetPreImport OnAssetPreImport</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">FOnAssetPostImport OnAssetPostImport</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">FOnAssetReimport OnAssetReimport</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">FOnAssetPostLODImport OnAssetPostLODImport</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>我们可以通过为以上代理绑定自定义函数的方式干预资产导入过程。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">GEditor</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">GetEditorSubsystem</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">UImportSubsystem</span><span style="color:#89DDFF;">&gt;()-&gt;</span><span style="color:#A6ACCD;">OnAssetReimport</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddLambda</span><span style="color:#89DDFF;">([](</span><span style="color:#FFCB6B;">UObject</span><span style="color:#C792EA;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">Object</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">...</span><span style="color:#89DDFF;">});</span></span>
<span class="line"></span></code></pre></div><p>也可以广播以上代理调用导入模块。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">GEditor</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">GetEditorSubsystem</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">UImportSubsystem</span><span style="color:#89DDFF;">&gt;()-&gt;</span><span style="color:#82AAFF;">BroadcastAssetReimport</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div>`,35),o=[t];function p(c,r,i,D,F,y){return n(),a("div",null,o)}const C=s(e,[["render",p]]);export{d as __pageData,C as default};
