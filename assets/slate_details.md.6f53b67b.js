import{_ as s,c as a,o as n,a as l}from"./app.43496e99.js";const A=JSON.parse('{"title":"细节面板","description":"","frontmatter":{},"headers":[{"level":2,"title":"关于细节面板","slug":"关于细节面板","link":"#关于细节面板","children":[]},{"level":2,"title":"视图层容器","slug":"视图层容器","link":"#视图层容器","children":[]},{"level":2,"title":"数据层容器","slug":"数据层容器","link":"#数据层容器","children":[]},{"level":2,"title":"自定义细节面板","slug":"自定义细节面板","link":"#自定义细节面板","children":[]},{"level":2,"title":"自定义根对象","slug":"自定义根对象","link":"#自定义根对象","children":[]},{"level":2,"title":"实例化控件","slug":"实例化控件","link":"#实例化控件","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"relativePath":"slate/details.md","lastUpdated":1660026515000}'),p={name:"slate/details.md"},o=l(`<h1 id="细节面板" tabindex="-1">细节面板 <a class="header-anchor" href="#细节面板" aria-hidden="true">#</a></h1><h2 id="关于细节面板" tabindex="-1">关于细节面板 <a class="header-anchor" href="#关于细节面板" aria-hidden="true">#</a></h2><p>细节面板（Details Panel）是 Unreal Editor 中的一个控件。主界面的细节窗口、设置界面的选项列表、资产编辑器中的属性列表等都是使用细节面板构建的。细节面板绑定一个或多个 <code>UObject</code> 实例作为数据对象，获取其属性并创建属性列表。我们可以使用它方便地查看和修改任何有效 <code>UObject</code> 实例的属性。</p><p>本章节将讲解细节面板控件的使用。</p><h2 id="视图层容器" tabindex="-1">视图层容器 <a class="header-anchor" href="#视图层容器" aria-hidden="true">#</a></h2><p><code>IDetailsView</code> 是细节面板视图层的接口类，派生自 <code>SCompoundWidget</code> 。该类不能使用 <code>SNew()</code> 直接实例化，而是通过 Property Editor 模块构造控件实例。</p><p>为便于演示，下面声明一个无 Slate 属性的控件类型，作为细节面板的视图层容器：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">SMyDetails</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">SCompoundWidget</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">SLATE_BEGIN_ARGS</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">SMyDetails</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">SLATE_END_ARGS</span><span style="color:#89DDFF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Construct</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">FArguments</span><span style="color:#C792EA;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">InArgs</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#C792EA;">private</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  TSharedPtr</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">IDetailsView</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> Details</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><p>该类拥有一个 <code>TSharedPtr&lt;IDetailsView&gt;</code> 私有成员，用于存储细节面板控件实例。</p><h2 id="数据层容器" tabindex="-1">数据层容器 <a class="header-anchor" href="#数据层容器" aria-hidden="true">#</a></h2><p>细节面板可以绑定任一有效的 <code>UObject</code> 实例。在开发插件时，可以使用它编辑场景中的对象，也使用它编辑自定义表单。首先定义一个简单的 <code>UClass</code>：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">UCLASS</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">UTestClass</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">UObject</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">GENERATED_BODY</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">UPROPERTY</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">EditAnywhere</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> Category</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">  int32 TestInt</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">UPROPERTY</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">EditAnywhere</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Category</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">  UTexture2D</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> TestTexture</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><p>然后获取该类的 <code>ClassDefaultObject</code> 作为细节面板的数据层容器，便于演示：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">auto</span><span style="color:#A6ACCD;"> ClassDefaultObject </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">UTestClass</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">StaticClass</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">GetDefaultObject</span><span style="color:#89DDFF;">(true);</span></span>
<span class="line"></span></code></pre></div><h2 id="自定义细节面板" tabindex="-1">自定义细节面板 <a class="header-anchor" href="#自定义细节面板" aria-hidden="true">#</a></h2><p>下面定义一个 <code>IDetailCustomization</code> 的派生类，用于自定义细节面板。<code>CustomizeDetails()</code> 方法会在实例化细节面板时被调用，可以修改细节面板或在细节面板中添加控件。</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">FMyDetails</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">IDetailCustomization</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">static</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">TSharedRef</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IDetailCustomization</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">MakeInstance</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">void</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">CustomizeDetails</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IDetailLayoutBuilder</span><span style="color:#C792EA;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">DetailBuilder</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">override</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><p>实现：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">TSharedRef</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IDetailCustomization</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">FMyDetails</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">MakeInstance</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MakeShared</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">FMyDetails</span><span style="color:#89DDFF;">&gt;();</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">FMyDetails</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">CustomizeDetails</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IDetailLayoutBuilder</span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">DetailBuilder</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  IDetailCategoryBuilder</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> Category </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> DetailBuilder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">EditCategory</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">TEXT</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  TArray</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">TWeakObjectPtr</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">UObject</span><span style="color:#89DDFF;">&gt;&gt;</span><span style="color:#A6ACCD;"> Objects</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  DetailBuilder</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">GetObjectsBeingCustomized</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Objects</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  Category</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AddCustomRow</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">FText</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">FromString</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">TEXT</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">CustomDetails</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)))</span></span>
<span class="line"><span style="color:#A6ACCD;">      .</span><span style="color:#82AAFF;">WholeRowContent</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">SNew</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">SButton</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Text</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">FText</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">FromString</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">TEXT</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">CustomDetails</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)))</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>注册自定义属性到细节面板控件：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Details</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">RegisterInstancedCustomPropertyLayout</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">UMyClass</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">StaticClass</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">FOnGetDetailCustomizationInstance</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">CreateStatic</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#FFCB6B;">FMyDetails</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">MakeInstance</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">);</span></span>
<span class="line"></span></code></pre></div><h2 id="自定义根对象" tabindex="-1">自定义根对象 <a class="header-anchor" href="#自定义根对象" aria-hidden="true">#</a></h2><p>在 Unreal Editor 设置界面中，每个选项大类前都有一个带有分类描述和导入导出按钮的可折叠标题栏。这里的标题栏是通过 <code>IDetailRootObjectCustomization</code> 接口实现的。该接口用于自定义细节面板中根对象的属性。该接口定义了如下方法：</p><ul><li><code>ShouldDisplayHeader()</code>：设置标题栏可见性</li><li><code>CustomizeObjectHeader()</code>：自定义标题栏内容</li><li><code>AreObjectsVisible()</code>：设置根对象可见性</li><li><code>GetExpansionArrowUsage()</code>：设置是否启用折叠功能</li></ul><p>下面演示声明一个 <code>IDetailRootObjectCustomization</code> 的派生类：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">FMyDetailsRootObjectCustomization</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">public</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">IDetailRootObjectCustomization</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">TSharedPtr</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">SWidget</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">CustomizeObjectHeader</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">FDetailsObjectSet</span><span style="color:#C792EA;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">InRootObjectSet</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">TSharedPtr</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">ITableRow</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C792EA;">&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">InTableRow</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">override</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">auto</span><span style="color:#F07178;"> ObjectName </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">InRootObjectSet</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RootObjects</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]-&gt;</span><span style="color:#82AAFF;">GetName</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">SNew</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">STextBlock</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">Text</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">FText</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">FromString</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">ObjectName</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">bool</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">ShouldDisplayHeader</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">UObject</span><span style="color:#C792EA;">*</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">InRootObject</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">override</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">virtual</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">EExpansionArrowUsage</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">GetExpansionArrowUsage</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">override</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">EExpansionArrowUsage</span><span style="color:#89DDFF;">::</span><span style="color:#F07178;">Default</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span></code></pre></div><p>将该类的实例注册到细节面板控件，实现为细节面板根对象添加可折叠的标题栏：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">Details</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">SetRootObjectCustomizationInstance</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">MakeShared</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">FMyDetailsRootObjectCustomization</span><span style="color:#89DDFF;">&gt;());</span></span>
<span class="line"></span></code></pre></div><h2 id="实例化控件" tabindex="-1">实例化控件 <a class="header-anchor" href="#实例化控件" aria-hidden="true">#</a></h2><p>下面是该控件的实现：</p><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">SMyDetails</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">Construct</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">FArguments</span><span style="color:#C792EA;">&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">InArgs</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">auto</span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> PropertyEditor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">FModuleManager</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">GetModuleChecked</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">FPropertyEditorModule</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">PropertyEditor</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  FDetailsViewArgs DetailsViewArgs</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  Details </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> PropertyEditor</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CreateDetailView</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">DetailsViewArgs</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  Details</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">RegisterInstancedCustomPropertyLayout</span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">UMyClass</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">StaticClass</span><span style="color:#89DDFF;">(),</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">FOnGetDetailCustomizationInstance</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">CreateStatic</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#FFCB6B;">FMyDetails</span><span style="color:#89DDFF;">::</span><span style="color:#A6ACCD;">MakeInstance</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  Details</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">SetRootObjectCustomizationInstance</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">MakeShared</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">FMyDetailsRootObjectCustomization</span><span style="color:#89DDFF;">&gt;());</span></span>
<span class="line"><span style="color:#A6ACCD;">  Details</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#82AAFF;">SetObject</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">UTestClass</span><span style="color:#89DDFF;">::</span><span style="color:#82AAFF;">StaticClass</span><span style="color:#89DDFF;">()-&gt;</span><span style="color:#82AAFF;">GetDefaultObject</span><span style="color:#89DDFF;">(),</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  ChildSlot</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">    Details</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ToSharedRef</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>以上代码实现了在该控件构造时实例化一个细节面板控件，并为其绑定当前选中的 Actor 对象。该过程主要分为以下几个部分：</p><ul><li>使用 Property Editor 模块的 <code>CreateDetailView()</code> 方法构造细节面板控件实例。</li><li>为细节面板控件注册派生自 <code>IDetailCustomization</code> 的细节面板自定义属性实例。</li><li>为细节面板控件注册派生自 <code>IDetailRootObjectCustomization</code> 的根对象自定义属性实例。</li><li>使用 <code>IDetailsView</code> 的 <code>SetObject()</code> 或 <code>SetObjects()</code> 方法为细节面板控件绑定数据对象。</li><li>将细节面板控件实例的智能指针转换为智能引用，作为该控件的 Slate 表达式。</li></ul><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-hidden="true">#</a></h2><p>得益于 <code>UObject</code> 完善的反射机制和细节面板系统相对易用的 API 设计，我们可以很容易地实现对象属性的可视化编辑。</p><p>至于为何不提供与其他 Slate 控件一致的 API ，个人认为可能有以下几个原因：</p><ul><li>细节面板涉及过多子组件，较为复杂，设计成 Slate 组合式表达式不会提高易用性。</li><li>大多情况下，细节面板与一个 <code>UObject</code> 实例数据绑定，手动构建控件会使表达式冗长。</li><li>细节面板是 Unreal Editor 的一个核心组件，重构并不现实。</li></ul>`,37),e=[o];function t(c,r,F,y,D,i){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
